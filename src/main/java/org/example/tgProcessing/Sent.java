package org.example.tgProcessing;

import org.example.telegramBots.TelegramBot;
import org.example.table.User;
import org.example.telegramBots.TelegramBotLogs;
import org.telegram.telegrambots.meta.api.methods.CopyMessage;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.methods.send.SendVideo;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.DeleteMessage;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageReplyMarkup;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText;
import org.telegram.telegrambots.meta.api.methods.ForwardMessage;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.io.File;
import java.util.List;
import java.util.ResourceBundle;

public class Sent {
    TelegramBot telegramBot = new TelegramBot();
    TelegramBotLogs telegramBotLogs = new TelegramBotLogs();

    public void sendPhoto(long chatId, Integer ThreadId, long fromChatID, int messageID){
        CopyMessage copyPhoto = new CopyMessage();
        copyPhoto.setChatId(chatId);
        copyPhoto.setMessageId(messageID);
        copyPhoto.setFromChatId(fromChatID);
        if(ThreadId!=null){
            copyPhoto.setMessageThreadId(ThreadId);
        }
        telegramBot.trySendMessage(copyPhoto);
    }

    public Message sendMessage(User user, String messageText, SendMessage sendMessage) {
        sendMessage.setChatId(user.getIdUser());
        sendMessage.setText(messageText);
        sendMessage.setParseMode("HTML");

        Message sentMessage = telegramBot.trySendMessage(sendMessage);

//        ResourceBundle rb = ResourceBundle.getBundle("app");
//        long groupID = Long.parseLong(rb.getString("tg.group"));
//        if(sendMessage.getReplyMarkup()!=null){
//            SendMessage replyMessage = new SendMessage();
//
//            replyMessage.setReplyMarkup(sendMessage.getReplyMarkup());
//
//            sendMessageUser(groupID,user.getId_message(),messageText, replyMessage);
//        }else{
//            sendMessageUser(groupID,user.getId_message(),messageText);
//        }
        return sentMessage;
    }

    public Long sendMessageGroup(User user,String text, String filePath){
        ResourceBundle rb = ResourceBundle.getBundle("app");
        long groupID = Long.parseLong(rb.getString("tg.group"));
        if(filePath == null){
            SendMessage sendGroup = new SendMessage();
            sendGroup.setChatId(groupID);
            sendGroup.setText(text);
            sendGroup.setParseMode("HTML");
            sendGroup.setMessageThreadId(user.getId_message());
            Message sentMessage = telegramBotLogs.trySendMessage(sendGroup);
            return sentMessage != null ? (long) sentMessage.getMessageId() : null;
        }else {
            SendPhoto sendPhoto = new SendPhoto();
            sendPhoto.setChatId(groupID);
            sendPhoto.setCaption(text);
            sendPhoto.setParseMode("HTML");

            File file = new File(filePath);
            if (!file.exists()) {
                System.out.println("File does not exist: " + filePath);
                return null;
            }

            InputFile inputFile = new InputFile(file);
            sendPhoto.setPhoto(inputFile);

            Message sentMessage = telegramBotLogs.trySendPhoto(sendPhoto);
            return sentMessage != null ? (long) sentMessage.getMessageId() : null;
        }
    }

    public void sendMessageStart(User user, String messageText, SendMessage sendMessage) {
        sendMessage.setChatId(user.getIdUser());
        sendMessage.setText(messageText);
        sendMessage.setParseMode("HTML");

        telegramBot.trySendMessage(sendMessage);
    }

    public void sendMessageUser(long chatId, Integer messageThreadId, String messageText) {
        SendMessage groupMessage = new SendMessage();
        groupMessage.setChatId(chatId);
        groupMessage.setText(messageText);
        groupMessage.setParseMode("HTML");
        groupMessage.setMessageThreadId(messageThreadId);

        telegramBotLogs.trySendMessage(groupMessage);
    }

    public void sendMessageUser(long chatId, Integer messageThreadId, String messageText, SendMessage message) {
        message.setChatId(chatId);
        message.setText(messageText);
        message.setParseMode("HTML");
        message.setMessageThreadId(messageThreadId);

        telegramBotLogs.trySendMessage(message);
    }

    public void sendMessageFromBot(long chatId, String messageText) {
        SendMessage message = new SendMessage();

        message.setChatId(chatId);
        message.setText(messageText);
        message.setParseMode("HTML");

        telegramBot.trySendMessage(message);
    }

    public void sendMessage(User user, String messageText) {
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(user.getIdUser());
        sendMessage.setText(messageText);
        sendMessage.setParseMode("HTML");

        telegramBot.trySendMessage(sendMessage);
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–∞–∑–º–µ—Ç–∫–æ–π
     */
    public void sendMessageWithMarkup(User user, SendMessage sendMessage) {
        sendMessage.setChatId(user.getIdUser());
        sendMessage.setParseMode("HTML");
        
        telegramBot.trySendMessage(sendMessage);
    }
    
    public void sendReplyKeyboardMarkup(User user, ReplyKeyboardMarkup replyKeyboardMarkup, String text){
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(user.getIdUser());
        sendMessage.setText(text);
        sendMessage.setParseMode("HTML");
        sendMessage.setReplyMarkup(replyKeyboardMarkup);

        telegramBot.trySendMessage(sendMessage);
    }

    public void editMessageMarkup(User user, Integer messageId, String newText, EditMessageReplyMarkup markup) {
        EditMessageText editText = new EditMessageText();

        editText.setChatId(String.valueOf(user.getIdUser()));
        editText.setMessageId(messageId);
        editText.setText(newText);
        editText.setParseMode("HTML");
        InlineKeyboardMarkup finalMarkup;

        if (markup != null) {
            finalMarkup = markup.getReplyMarkup();
        } else {
            InlineKeyboardButton btnExit = new InlineKeyboardButton();
            btnExit.setText("–ù–∞–∑–∞–¥");
            btnExit.setCallbackData("Exit:" + messageId);

            finalMarkup = new InlineKeyboardMarkup();
            finalMarkup.setKeyboard(List.of(List.of(btnExit)));
        }

        editText.setReplyMarkup(finalMarkup);

        try {
            telegramBot.execute(editText);
        } catch (TelegramApiException e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: " + e.getMessage());
        }
    }
    public void sendPhoto(long chatId, String filePath, String caption) {
        SendPhoto sendPhoto = new SendPhoto();
        sendPhoto.setChatId(chatId);
        sendPhoto.setCaption(caption);

        File file = new File(filePath);
        if (!file.exists()) {
            System.out.println("File does not exist: " + filePath);
            return;
        }

        InputFile inputFile = new InputFile(file);
        sendPhoto.setPhoto(inputFile);

        telegramBot.trySendPhoto(sendPhoto);
    }

    public void sendPhotoWithButton(long chatId, String filePath, String caption, SendPhoto sendPhoto) {
        sendPhoto.setChatId(chatId);
        sendPhoto.setCaption(caption);

        File file = new File(filePath);
        if (!file.exists()) {
            System.out.println("File does not exist: " + filePath);
            return;
        }

        InputFile inputFile = new InputFile(file);
        sendPhoto.setPhoto(inputFile);

        telegramBot.trySendPhoto(sendPhoto);
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–≤—É—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –≥—Ä—É–ø–ø—É —Å —Ç–µ–∫—Å—Ç–æ–º
     */
    public Long sendTwoPhotosToGroup(User user, String text, String firstPhotoPath, String secondPhotoPath) {
        ResourceBundle rb = ResourceBundle.getBundle("app");
        long groupID = Long.parseLong(rb.getString("tg.group"));
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –ø–µ—Ä–≤–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π
        SendPhoto firstPhoto = new SendPhoto();
        firstPhoto.setChatId(groupID);
        firstPhoto.setCaption(text);
        firstPhoto.setParseMode("HTML");
        firstPhoto.setMessageThreadId(user.getId_message());

        File firstFile = new File(firstPhotoPath);
        if (!firstFile.exists()) {
            return null;
        }

        InputFile firstInputFile = new InputFile(firstFile);
        firstPhoto.setPhoto(firstInputFile);

        Message firstMessage = telegramBotLogs.trySendPhoto(firstPhoto);
        
        if (firstMessage == null) {
            return null;
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∫–∞–∫ –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø—É
        if (firstMessage != null && secondPhotoPath != null) {
            File secondFile = new File(secondPhotoPath);
            if (secondFile.exists()) {
                SendPhoto secondPhoto = new SendPhoto();
                secondPhoto.setChatId(groupID);
                secondPhoto.setCaption("üì¶ –°–∫—Ä–∏–Ω—à–æ—Ç —Ä–∞–∑–¥–µ–ª–∞ –¥–æ—Å—Ç–∞–≤–∫–∏:");
                secondPhoto.setParseMode("HTML");
                secondPhoto.setMessageThreadId(user.getId_message());

                InputFile secondInputFile = new InputFile(secondFile);
                secondPhoto.setPhoto(secondInputFile);

                telegramBotLogs.trySendPhoto(secondPhoto);
            }
        }
        
        return firstMessage != null ? (long) firstMessage.getMessageId() : null;
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
     */
    public void sendMessageToGroup(long groupId, String text) {
        SendMessage message = new SendMessage();
        message.setChatId(groupId);
        message.setText(text);
        message.setParseMode("HTML");
        
        telegramBotLogs.trySendMessage(message);
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É —Å —Ä–∞–∑–º–µ—Ç–∫–æ–π
     */
    public org.telegram.telegrambots.meta.api.objects.Message sendMessageToGroupWithMarkup(long groupId, String text, InlineKeyboardMarkup markup) {
        SendMessage message = new SendMessage();
        message.setChatId(groupId);
        message.setText(text);
        message.setParseMode("HTML");
        message.setReplyMarkup(markup);
        
        return telegramBotLogs.trySendMessage(message);
    }
    
    /**
     * –ü–µ—Ä–µ—Å–ª–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ –≥—Ä—É–ø–ø—É
     */
    public void forwardPhotoToGroup(long groupId, String photoFileId) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å file_id
            if (photoFileId == null || photoFileId.trim().isEmpty()) {
                System.err.println("‚ùå Invalid photo file ID: " + photoFileId);
                return;
            }
            
            SendPhoto sendPhoto = new SendPhoto();
            sendPhoto.setChatId(groupId);
            sendPhoto.setPhoto(new InputFile(photoFileId));
            
            System.out.println("üì∏ Forwarding photo to group " + groupId + " with file ID: " + photoFileId);
            telegramBotLogs.trySendPhoto(sendPhoto);
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Ñ–æ—Ç–æ –≤ –≥—Ä—É–ø–ø—É: " + e.getMessage());
            System.err.println("‚ùå File ID: " + photoFileId);
            // –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ñ–æ—Ç–æ
            try {
                SendMessage errorMessage = new SendMessage();
                errorMessage.setChatId(groupId);
                errorMessage.setText("üì∏ [–§–æ—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏]");
                telegramBotLogs.trySendMessage(errorMessage);
            } catch (Exception ex) {
                System.err.println("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–∂–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: " + ex.getMessage());
            }
        }
    }
    
    /**
     * –ü–µ—Ä–µ—Å–ª–∞—Ç—å –≤–∏–¥–µ–æ –≤ –≥—Ä—É–ø–ø—É
     */
    public void forwardVideoToGroup(long groupId, String videoFileId) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å file_id
            if (videoFileId == null || videoFileId.trim().isEmpty()) {
                System.err.println("‚ùå Invalid video file ID: " + videoFileId);
                return;
            }
            
            SendVideo sendVideo = new SendVideo();
            sendVideo.setChatId(groupId);
            sendVideo.setVideo(new InputFile(videoFileId));
            
            System.out.println("üé• Forwarding video to group " + groupId + " with file ID: " + videoFileId);
            telegramBotLogs.trySendVideo(sendVideo);
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ –≤–∏–¥–µ–æ –≤ –≥—Ä—É–ø–ø—É: " + e.getMessage());
            System.err.println("‚ùå File ID: " + videoFileId);
            // –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –≤–∏–¥–µ–æ
            try {
                SendMessage errorMessage = new SendMessage();
                errorMessage.setChatId(groupId);
                errorMessage.setText("üé• [–í–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏]");
                telegramBotLogs.trySendMessage(errorMessage);
            } catch (Exception ex) {
                System.err.println("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–∂–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: " + ex.getMessage());
            }
        }
    }
    
    /**
     * –ü–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
     */
    public void forwardMessageToGroup(long groupId, long fromChatId, int messageId) {
        try {
            ForwardMessage forwardMessage = new ForwardMessage();
            forwardMessage.setChatId(groupId);
            forwardMessage.setFromChatId(fromChatId);
            forwardMessage.setMessageId(messageId);
            
            System.out.println("üì§ Forwarding message " + messageId + " from chat " + fromChatId + " to group " + groupId);
            telegramBotLogs.tryForwardMessage(forwardMessage);
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É: " + e.getMessage());
            System.err.println("‚ùå From chat: " + fromChatId + ", Message ID: " + messageId);
            // –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –ø–µ—Ä–µ—Å—ã–ª–∫–∏
            try {
                SendMessage errorMessage = new SendMessage();
                errorMessage.setChatId(groupId);
                errorMessage.setText("üì§ [–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏]");
                telegramBotLogs.trySendMessage(errorMessage);
            } catch (Exception ex) {
                System.err.println("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–∂–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: " + ex.getMessage());
            }
        }
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ –≥—Ä—É–ø–ø—É –∏–∑ —Ñ–∞–π–ª–∞
     */
    public void sendPhotoToGroupFromFile(long groupId, String filePath) {
        try {
            File photoFile = new File(filePath);
            if (!photoFile.exists()) {
                System.err.println("‚ùå Photo file does not exist: " + filePath);
                return;
            }
            
            SendPhoto sendPhoto = new SendPhoto();
            sendPhoto.setChatId(groupId);
            sendPhoto.setPhoto(new InputFile(photoFile));
            
            System.out.println("üì∏ Sending photo from file to group " + groupId + ": " + filePath);
            telegramBotLogs.trySendPhoto(sendPhoto);
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ –∏–∑ —Ñ–∞–π–ª–∞ –≤ –≥—Ä—É–ø–ø—É: " + e.getMessage());
            System.err.println("‚ùå File path: " + filePath);
        }
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ –≥—Ä—É–ø–ø—É –∏–∑ —Ñ–∞–π–ª–∞ –≤ –ø–æ–¥–≥—Ä—É–ø–ø—É
     */
    public void sendPhotoToGroupFromFile(long groupId, String filePath, int messageThreadId) {
        try {
            File photoFile = new File(filePath);
            if (!photoFile.exists()) {
                System.err.println("‚ùå Photo file does not exist: " + filePath);
                return;
            }
            
            SendPhoto sendPhoto = new SendPhoto();
            sendPhoto.setChatId(groupId);
            sendPhoto.setPhoto(new InputFile(photoFile));
            sendPhoto.setMessageThreadId(messageThreadId);
            
            System.out.println("üì∏ Sending photo from file to group " + groupId + " in thread " + messageThreadId + ": " + filePath);
            telegramBotLogs.trySendPhoto(sendPhoto);
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ –∏–∑ —Ñ–∞–π–ª–∞ –≤ –ø–æ–¥–≥—Ä—É–ø–ø—É: " + e.getMessage());
            System.err.println("‚ùå File path: " + filePath);
        }
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ –≤ –≥—Ä—É–ø–ø—É –∏–∑ —Ñ–∞–π–ª–∞
     */
    public void sendVideoToGroupFromFile(long groupId, String filePath) {
        try {
            File videoFile = new File(filePath);
            if (!videoFile.exists()) {
                System.err.println("‚ùå Video file does not exist: " + filePath);
                return;
            }
            
            SendVideo sendVideo = new SendVideo();
            sendVideo.setChatId(groupId);
            sendVideo.setVideo(new InputFile(videoFile));
            
            System.out.println("üé• Sending video from file to group " + groupId + ": " + filePath);
            telegramBotLogs.trySendVideo(sendVideo);
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ –∏–∑ —Ñ–∞–π–ª–∞ –≤ –≥—Ä—É–ø–ø—É: " + e.getMessage());
            System.err.println("‚ùå File path: " + filePath);
        }
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ –≤ –≥—Ä—É–ø–ø—É –∏–∑ —Ñ–∞–π–ª–∞ –≤ –ø–æ–¥–≥—Ä—É–ø–ø—É
     */
    public void sendVideoToGroupFromFile(long groupId, String filePath, int messageThreadId) {
        try {
            File videoFile = new File(filePath);
            if (!videoFile.exists()) {
                System.err.println("‚ùå Video file does not exist: " + filePath);
                return;
            }
            
            SendVideo sendVideo = new SendVideo();
            sendVideo.setChatId(groupId);
            sendVideo.setVideo(new InputFile(videoFile));
            sendVideo.setMessageThreadId(messageThreadId);
            
            System.out.println("üé• Sending video from file to group " + groupId + " in thread " + messageThreadId + ": " + filePath);
            telegramBotLogs.trySendVideo(sendVideo);
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ –∏–∑ —Ñ–∞–π–ª–∞ –≤ –ø–æ–¥–≥—Ä—É–ø–ø—É: " + e.getMessage());
            System.err.println("‚ùå File path: " + filePath);
        }
    }
    
    /**
     * –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
     */
    public void deleteMessage(long chatId, int messageId) {
        try {
            DeleteMessage deleteMessage = new DeleteMessage();
            deleteMessage.setChatId(String.valueOf(chatId));
            deleteMessage.setMessageId(messageId);
            
            telegramBotLogs.execute(deleteMessage);
            System.out.println("‚úÖ Message deleted: " + messageId);
        } catch (Exception e) {
            System.err.println("‚ùå Error deleting message: " + e.getMessage());
        }
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É —Å –ø–æ–¥–≥—Ä—É–ø–ø–æ–π (topic)
     */
    public org.telegram.telegrambots.meta.api.objects.Message sendMessageToGroupWithMarkup(long groupId, String text, InlineKeyboardMarkup markup, int messageThreadId) {
        SendMessage message = new SendMessage();
        message.setChatId(groupId);
        message.setText(text);
        message.setParseMode("HTML");
        message.setReplyMarkup(markup);
        message.setMessageThreadId(messageThreadId);
        
        System.out.println("üìù Sending message to group " + groupId + " in thread " + messageThreadId);
        return telegramBotLogs.trySendMessage(message);
    }
    
    /**
     * –ü–µ—Ä–µ—Å–ª–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ –≥—Ä—É–ø–ø—É —Å –ø–æ–¥–≥—Ä—É–ø–ø–æ–π (topic) –∏—Å–ø–æ–ª—å–∑—É—è ForwardMessage
     */
    public void forwardPhotoToGroup(long groupId, String photoFileId, int messageThreadId) {
        // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è - –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ forwardMessageToGroupWithThread
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ –≥—Ä—É–ø–ø—É —Å –ø–æ–¥–≥—Ä—É–ø–ø–æ–π (topic) –∏–∑ file_id
     */
    public void sendPhotoToGroupFromFileId(long groupId, String photoFileId, int messageThreadId) {
        try {
            SendPhoto sendPhoto = new SendPhoto();
            sendPhoto.setChatId(String.valueOf(groupId));
            sendPhoto.setPhoto(new InputFile(photoFileId));
            sendPhoto.setMessageThreadId(messageThreadId);
            
            System.out.println("üì∏ Sending photo to group " + groupId + " in thread " + messageThreadId + " with file ID: " + photoFileId);
            
            org.telegram.telegrambots.meta.api.objects.Message response = telegramBotLogs.execute(sendPhoto);
            
            if (response != null) {
                System.out.println("‚úÖ Photo sent successfully!");
            } else {
                System.err.println("‚ùå Failed to send photo");
            }
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ –≤ –≥—Ä—É–ø–ø—É: " + e.getMessage());
            System.err.println("‚ùå File ID: " + photoFileId + ", Thread: " + messageThreadId);
            e.printStackTrace();
        }
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ –≤ –≥—Ä—É–ø–ø—É —Å –ø–æ–¥–≥—Ä—É–ø–ø–æ–π (topic) –∏–∑ file_id
     */
    public void sendVideoToGroupFromFileId(long groupId, String videoFileId, int messageThreadId) {
        try {
            SendVideo sendVideo = new SendVideo();
            sendVideo.setChatId(String.valueOf(groupId));
            sendVideo.setVideo(new InputFile(videoFileId));
            sendVideo.setMessageThreadId(messageThreadId);
            
            System.out.println("üé• Sending video to group " + groupId + " in thread " + messageThreadId + " with file ID: " + videoFileId);
            
            org.telegram.telegrambots.meta.api.objects.Message response = telegramBotLogs.execute(sendVideo);
            
            if (response != null) {
                System.out.println("‚úÖ Video sent successfully!");
            } else {
                System.err.println("‚ùå Failed to send video");
            }
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ –≤ –≥—Ä—É–ø–ø—É: " + e.getMessage());
            System.err.println("‚ùå File ID: " + videoFileId + ", Thread: " + messageThreadId);
            e.printStackTrace();
        }
    }
    
    /**
     * –ü–µ—Ä–µ—Å–ª–∞—Ç—å –≤–∏–¥–µ–æ –≤ –≥—Ä—É–ø–ø—É —Å –ø–æ–¥–≥—Ä—É–ø–ø–æ–π (topic) –∏—Å–ø–æ–ª—å–∑—É—è ForwardMessage
     */
    public void forwardVideoToGroup(long groupId, String videoFileId, int messageThreadId) {
        // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è - –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ forwardMessageToGroupWithThread
    }
    
    /**
     * –û—Ç–≤–µ—Ç –Ω–∞ callback query
     */
    public void answerCallbackQuery(org.telegram.telegrambots.meta.api.methods.AnswerCallbackQuery answerCallbackQuery) {
        try {
            telegramBot.execute(answerCallbackQuery);
        } catch (TelegramApiException e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ callback query: " + e.getMessage());
        }
    }
}
